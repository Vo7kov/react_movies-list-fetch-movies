{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","getMovie","query","fetch","then","res","json","catch","Response","Error","normalizeMovieData","url","Title","Plot","Poster","imdbID","FindMovie","setMovies","useState","setQuery","isLoading","setIsLoading","hasError","setHasError","foundMovie","setFoundMovie","handleFormSubmit","event","a","preventDefault","response","reset","onSubmit","htmlFor","type","id","placeholder","classNames","value","onChange","target","disabled","length","onClick","undefined","find","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.335c1d9d.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=526a45d1';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\n\nimport { MovieCard } from '../MovieCard';\n\nimport { getMovie } from '../../api';\n\nimport { MovieData } from '../../types/MovieData';\nimport { Movie } from '../../types/Movie';\n\nimport './FindMovie.scss';\n\nconst getImgUrl = (url: string) => {\n  const DEFAULT_PICTURE\n    = 'https://via.placeholder.com/360x270.png?text=no%20preview';\n\n  return url === 'N/A'\n    ? DEFAULT_PICTURE\n    : url;\n};\n\nconst normalizeMovieData = (movie: MovieData) => {\n  const {\n    Title,\n    Plot,\n    Poster,\n    imdbID,\n  } = movie;\n\n  return {\n    title: Title,\n    description: Plot,\n    imgUrl: getImgUrl(Poster),\n    imdbUrl: `https://www.imdb.com/title/${imdbID}`,\n    imdbId: imdbID,\n  };\n};\n\ntype Props = {\n  movies: Movie[],\n  setMovies: (movie: Movie) => void,\n};\n\nexport const FindMovie: React.FC<Props> = ({ movies, setMovies }) => {\n  const [query, setQuery] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasError, setHasError] = useState(false);\n  const [foundMovie, setFoundMovie] = useState<MovieData | null>(null);\n\n  const handleFormSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n    try {\n      event.preventDefault();\n      setIsLoading(true);\n      const response = await getMovie(query);\n\n      if ('Response' in response && response.Response === 'False') {\n        setHasError(true);\n        setFoundMovie(null);\n      } else {\n        setHasError(false);\n        setFoundMovie(response as MovieData);\n      }\n    } catch {\n      setHasError(true);\n      setFoundMovie(null);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const reset = () => {\n    setFoundMovie(null);\n    setQuery('');\n  };\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n    setHasError(false);\n  };\n\n  const handleAddButton = () => {\n    if (\n      movies\n        .find(movie => movie.imdbId === foundMovie?.imdbID) === undefined\n    ) {\n      setMovies(normalizeMovieData(foundMovie as MovieData));\n      reset();\n    } else {\n      reset();\n    }\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleFormSubmit}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames(\n                'input',\n                {\n                  'is-danger': hasError,\n                },\n              )}\n              value={query}\n              onChange={handleInputChange}\n            />\n          </div>\n\n          {hasError && (\n            <p\n              className=\"help is-danger\"\n              data-cy=\"errorMessage\"\n            >\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames(\n                'button',\n                'is-light',\n                {\n                  'is-loading': isLoading,\n                },\n              )}\n              disabled={query.length === 0}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {foundMovie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAddButton}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {foundMovie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n\n          {foundMovie && (\n            <MovieCard\n              movie={normalizeMovieData(foundMovie)}\n            />\n          )}\n        </div>\n      )}\n    </>\n  );\n};\n","import React, { useState } from 'react';\n\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nimport { Movie } from './types/Movie';\n\nimport './App.scss';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList\n          movies={movies}\n        />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          movies={movies}\n          setMovies={(movie: Movie) => setMovies([...movies, movie])}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}